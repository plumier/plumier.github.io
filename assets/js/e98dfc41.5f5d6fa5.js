(self.webpackChunkplumier_docs=self.webpackChunkplumier_docs||[]).push([[356],{876:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,h=u["".concat(d,".").concat(m)]||u[m]||c[m]||r;return n?a.createElement(h,o(o({ref:t},s),{},{components:n})):a.createElement(h,o({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8947:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return d},default:function(){return s}});var a=n(7560),i=n(8283),r=(n(2784),n(876)),o={id:"social-login",title:"Social Media Login"},l={unversionedId:"social-login",id:"social-login",isDocsHomePage:!1,title:"Social Media Login",description:"Plumier provided functionalities to easily secure your API and application using social media login such as Facebook, Google, GitHub and GitLab (Other provider will be added in the future). It included some security best practices out of the box, so you don't need to understand the security practice technically to implement social media login in Plumier.",source:"@site/docs/Social-Login.md",sourceDirName:".",slug:"/social-login",permalink:"/social-login",editUrl:"https://github.com/plumier/plumier/edit/master/docs/docusaurus/docs/Social-Login.md",version:"current",frontMatter:{id:"social-login",title:"Social Media Login"},sidebar:"overview",previous:{title:"Swagger",permalink:"/swagger"},next:{title:"Serve Static Files",permalink:"/serve-static"}},d=[{value:"Enable Functionalities",id:"enable-functionalities",children:[]},{value:"Environment Variable for Default Configuration",id:"environment-variable-for-default-configuration",children:[]},{value:"Redirect URI Handler",id:"redirect-uri-handler",children:[]},{value:"Parameter Binding",id:"parameter-binding",children:[]},{value:"Separate Redirect Uris",id:"separate-redirect-uris",children:[]},{value:"OAuth User",id:"oauth-user",children:[]},{value:"Showing The Login Page",id:"showing-the-login-page",children:[{value:"Social Media Login Button",id:"social-media-login-button",children:[]}]},{value:"Sending Message Back To Main Window",id:"sending-message-back-to-main-window",children:[]},{value:"Customization",id:"customization",children:[{value:"Custom Login Endpoint",id:"custom-login-endpoint",children:[]},{value:"Add Extra Parameter To Login Endpoint",id:"add-extra-parameter-to-login-endpoint",children:[]},{value:"Add Extra Parameter on Profile Endpoint",id:"add-extra-parameter-on-profile-endpoint",children:[]}]}],p={toc:d};function s(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Plumier provided functionalities to easily secure your API and application using social media login such as Facebook, Google, GitHub and GitLab (Other provider will be added in the future). It included some security best practices out of the box, so you don't need to understand the security practice technically to implement social media login in Plumier."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This documentation assume that you have knowledge on how to setup social login application on ",(0,r.kt)("a",{parentName:"p",href:"https://developers.facebook.com/"},"Facebook"),", ",(0,r.kt)("a",{parentName:"p",href:"https://console.developers.google.com/"},"Google"),", ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/settings/developers"},"GitHub"),", ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/profile/applications"},"GitLab")," and ",(0,r.kt)("a",{parentName:"p",href:"https://developer.twitter.com/en/apps"},"Twitter"),", and have basic knowledge on how to setup OAuth login."))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Source Code ")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Complete example using social media login can be found in these GitHub repositories: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/plumier/tutorial-monorepo-social-login"},"React")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/plumier/tutorial-social-login-vue"},"Vue.js")))),(0,r.kt)("h2",{id:"enable-functionalities"},"Enable Functionalities"),(0,r.kt)("p",null,"Plumier social media login is not enabled by default, to enable the functionalities use some provided Facility from ",(0,r.kt)("inlineCode",{parentName:"p"},"@plumier/social-login")," package. "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Facility"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FacebookOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Provide Facebook specific social login functionalities")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GoogleOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Provide Google specific social login functionalities")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GitHubOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Provide GitHub specific social login functionalities")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GitLabOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Provide GitLab specific social login functionalities")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TwitterOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Provide Twitter specific social login functionalities")))),(0,r.kt)("p",null,"To enable the social login functionality, register above facility on the Plumier application like below: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const plumier = new Plumier()\n    .set(new WebApiFacility())\n    .set(new FacebookOAuthFacility({ \n        clientId: <FACEBOOK APP ID>, \n        clientSecret: <FACEBOOK APP SECRET> \n    }))\n    .initialize()\n")),(0,r.kt)("p",null,"All OAuth provider facility (",(0,r.kt)("inlineCode",{parentName:"p"},"FacebookOAuthFacility"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GoogleOAuthFacility"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GitHubOAuthFacility"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"GitLabOAuthFacility"),") receive option parameter which required a client id and client secret. This value can be found in the appropriate social login console application. "),(0,r.kt)("h2",{id:"environment-variable-for-default-configuration"},"Environment Variable for Default Configuration"),(0,r.kt)("p",null,"All OAuth provider facility can be instantiated without parameters, It will automatically check for the environment variable for each Client ID and Client Secret. For example if the registration is like below"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const plumier = new Plumier()\n    .set(new WebApiFacility())\n    .set(new FacebookOAuthFacility())\n    .initialize()\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FacebookOAuthFacility")," will search for environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"PLUM_FACEBOOK_CLIENT_ID")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"PLUM_FACEBOOK_CLIENT_SECRET"),". If both not found an error will be thrown."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Facility"),(0,r.kt)("th",{parentName:"tr",align:null},"Client ID"),(0,r.kt)("th",{parentName:"tr",align:null},"Client Secret"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FacebookOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_FACEBOOK_CLIENT_ID")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_FACEBOOK_CLIENT_SECRET"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GoogleOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_GOOGLE_CLIENT_ID")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_GOOGLE_CLIENT_SECRET"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GitHubOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_GITHUB_CLIENT_ID")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_GITHUB_CLIENT_SECRET"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GitLabOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_GITLAB_CLIENT_ID")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_GITLAB_CLIENT_SECRET"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TwitterOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_TWITTER_CLIENT_ID")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PLUM_TWITTER_CLIENT_SECRET"))))),(0,r.kt)("h2",{id:"redirect-uri-handler"},"Redirect URI Handler"),(0,r.kt)("p",null,"Plumier provided ",(0,r.kt)("inlineCode",{parentName:"p"},"@redirectUri()")," decorator to easily mark action as a social media redirect uri. To create an action as a redirect uri handler simply mark the action with the decorator like below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"class AuthController {\n\n    @route.get()\n    @redirectUri()\n    callback(@bind.oAuthUser() user:OAuthUser) {\n\n    }\n}\n")),(0,r.kt)("p",null,"Above is a common Plumier controller, no special configuration added except the ",(0,r.kt)("inlineCode",{parentName:"p"},"@redirectUri()"),". Above controller is a general redirect uri handler, its mean that it will handle all provider's redirect uris registered in the Plumier application into single method's controller. "),(0,r.kt)("p",null,"Controller above handles ",(0,r.kt)("inlineCode",{parentName:"p"},"GET /auth/callback")," route, you can change this easily to match your redirect uri registered in the OAuth application provider. "),(0,r.kt)("h2",{id:"parameter-binding"},"Parameter Binding"),(0,r.kt)("p",null,"Plumier provided several parameter binding to bind social media login data into callback uri methods."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Decorator"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@bind.oAuthUser()")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OAuthUser")),(0,r.kt)("td",{parentName:"tr",align:null},"Bind generalized social media login user of type ",(0,r.kt)("inlineCode",{parentName:"td"},"OAuthUser"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@bind.oAuthProfile()")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"Bind the raw social media user profile")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@bind.oAuthToken()")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:null},"Bind social media auth token")))),(0,r.kt)("p",null,"To use it simply apply it in the method's parameter like below "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"class AuthController {\n    @route.get()\n    @redirectUri()\n    callback(@bind.oAuthUser() user:OAuthUser, @bind.oAuthProfile() profile:any, @bind.oAuthToken() token:string) {\n\n    }\n}\n")),(0,r.kt)("h2",{id:"separate-redirect-uris"},"Separate Redirect Uris"),(0,r.kt)("p",null,"If you have different redirect uri registered on your OAuth application, you can create separate redirect uri for specific provider, while keep using the general redirect uri: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'class AuthController {\n\n    @route.get()\n    @redirectUri()\n    callback(@bind.oAuthUser() user:OAuthUser) {\n        // this will handle the rest provider registered except facebook\n    }\n\n    @route.get()\n    @redirectUri("Facebook")\n    facebook(@bind.oAuthUser() user:OAuthUser) {\n        // this will only handle Facebook redirect uri\n    }\n}\n')),(0,r.kt)("p",null,"If you provide a specific redirect uri handler, the general redirect uri will not be called."),(0,r.kt)("h2",{id:"oauth-user"},"OAuth User"),(0,r.kt)("p",null,"OAuth user is the current social media user. If you notice all example above, all controller has parameter decorate with ",(0,r.kt)("inlineCode",{parentName:"p"},"@bind.oAuthUser()")," decorator. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'interface OAuthUser<T = {}> {\n    provider: "Facebook" | "Google" | "GitHub" | "GitLab" | "Twitter"\n    id: string,\n    name: string,\n    firstName: string,\n    lastName: string,\n    profilePicture: string,\n    email?: string,\n    gender?: string,\n    dateOfBirth?: string\n    raw: T\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"provider")," is the OAuth provider name calling the redirect uri "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," is the user id on OAuth provider. Note that this field unique to ",(0,r.kt)("inlineCode",{parentName:"li"},"provider")," field"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," is the complete name of the current social media login user"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"firstName")," is the first name of the current social media login user"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"lastName")," is the last name of the current social media login user"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"profilePicture")," is the profile picture or avatar of the current social media login user"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"email"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"gender"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"dateOfBirth")," is optional, its based on your OAuth application access"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"raw")," is the raw value of the social media profile result.")),(0,r.kt)("h2",{id:"showing-the-login-page"},"Showing The Login Page"),(0,r.kt)("p",null,"Plumier provided endpoints that will be redirected to the social media login page. It generate the required parameter including the csrf token and then redirect the request to the generated url."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Endpoint"),(0,r.kt)("th",{parentName:"tr",align:null},"Served By"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET /auth/facebook/login")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FacebookOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Redirect to Facebook login page")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET /auth/google/login")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GoogleOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Redirect to Google login page")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET /auth/github/login")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GitHubOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Redirect to GitHub login page")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET /auth/gitlab/login")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GitLabOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Redirect to GitLab login page")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET /auth/tiwtter/login")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TwitterOAuthFacility")),(0,r.kt)("td",{parentName:"tr",align:null},"Redirect to Twitter login page")))),(0,r.kt)("p",null,"Above endpoint can be change accordingly see ",(0,r.kt)("a",{parentName:"p",href:"#customization"},"customization")," section for more detail."),(0,r.kt)("h3",{id:"social-media-login-button"},"Social Media Login Button"),(0,r.kt)("p",null,"Use the provided endpoints above to create the social media login button, by showing a dialog window popup or redirect the user to the Facebook login screen."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<a href="/auth/facebook/login">Login with Facebook</a>\n')),(0,r.kt)("p",null,"Code above will redirect the user to the Facebook login screen."),(0,r.kt)("p",null,"Or you can show a popup dialog window like below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script>\n    function showFacebookDialog(){\n        window.open("/auth/facebook/login", "Login using Facebook", "toolbar=no, width=500, height=500")\n    }\n<\/script>\n\n<button onclick="showFacebookDialog()">Login with Facebook</button>\n')),(0,r.kt)("p",null,"When user click the link or button above, user will redirected to the Facebook login page properly."),(0,r.kt)("h2",{id:"sending-message-back-to-main-window"},"Sending Message Back To Main Window"),(0,r.kt)("p",null,"When social medial login process done using a popup dialog window, it needs a way to signal the main window that the login process successful or not. "),(0,r.kt)("p",null,"Plumier provided an ActionResult returned html that will automatically post message to main window that open the login dialog. ",(0,r.kt)("inlineCode",{parentName:"p"},"response.postMessage()"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'class AuthController {\n\n    @route.get()\n    @redirectUri()\n    callback(@bind.oAuthUser() user:OAuthUser) {\n        // other process... for example check if user is in database\n\n        //create JWT TOKEN\n        const token = sign(<claim>, <secret>)\n        return response.postMessage({ status: "Success", token })\n    }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"By default ",(0,r.kt)("inlineCode",{parentName:"p"},"response.postMessage")," will send message only to the same origin, you can change this behavior by providing the origin on second parameter."))),(0,r.kt)("p",null,"Redirect uri handler above will send the ",(0,r.kt)("inlineCode",{parentName:"p"},'{ status: "Success", token }')," message to the main window using ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage"},"post message"),", main window need to listen to the ",(0,r.kt)("inlineCode",{parentName:"p"},"message")," event like below: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'window.addEventListener("message", ev => {\n    // IMPORTANT!!\n    // make sure the message comes from the same origin\n    if(ev.origin === location.origin && ev.data.status === "Success"){\n        // close the popup dialog\n        if (ev.source && "close" in ev.source) ev.source.close()\n        // retrieve the token \n        const token = ev.data.token;\n        // add code, when the login successful\n    }\n})\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Best Practice")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Its required to check the ",(0,r.kt)("inlineCode",{parentName:"p"},"ev.origin")," of the message event because any window possible to send message to the main window. "))),(0,r.kt)("h2",{id:"customization"},"Customization"),(0,r.kt)("p",null,"Plumier social login functionalities can be customize to match your need. "),(0,r.kt)("h3",{id:"custom-login-endpoint"},"Custom Login Endpoint"),(0,r.kt)("p",null,"Login endpoint served by OAuth provider facility can be customized accordingly from the facility"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'new Plumier()\n    .set(new FacebookOAuthFacility({ \n        loginEndPoint: "/auth/facebook/login-url"\n    }))\n')),(0,r.kt)("h3",{id:"add-extra-parameter-to-login-endpoint"},"Add Extra Parameter To Login Endpoint"),(0,r.kt)("p",null,"Its possible to customize the generated login endpoint by providing the parameter. For example the default scope of google endpoint used is: ",(0,r.kt)("inlineCode",{parentName:"p"},"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"),". You can override this by providing the scope on the login endpoint: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /auth/google/login?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email\n")),(0,r.kt)("h3",{id:"add-extra-parameter-on-profile-endpoint"},"Add Extra Parameter on Profile Endpoint"),(0,r.kt)("p",null,"OAuth provider facility used minimum configuration parameter to access the user profile endpoint. For example for Facebook provider the field params use is ",(0,r.kt)("inlineCode",{parentName:"p"},"id,name,first_name,last_name,picture.type(large)"),". You can override this by providing the parameters in the ",(0,r.kt)("inlineCode",{parentName:"p"},"FacebookOAuthFacility")," (other provider also can be configured) like below: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'new Plumier()\n    .set(new FacebookOAuthFacility({ \n        profileParams: { fields: "id,name,email,birthday,first_name,last_name,picture.type(large)" }\n    }))\n')))}s.isMDXComponent=!0}}]);