(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,d=p["".concat(o,".").concat(m)]||p[m]||b[m]||i;return n?a.a.createElement(d,c(c({ref:t},s),{},{components:n})):a.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(105)),o={id:"custom-authorization",title:"Custom Authorization"},c={unversionedId:"extends/custom-authorization",id:"extends/custom-authorization",isDocsHomePage:!1,title:"Custom Authorization",description:"Custom authorization can be created using @authorize.custom decorator. Wrap it using function to create a new decorator like below",source:"@site/docs/extends/Custom-Authorization.md",slug:"/extends/custom-authorization",permalink:"/extends/custom-authorization",editUrl:"https://github.com/plumier/plumier/edit/master/website/docs/extends/Custom-Authorization.md",version:"current",sidebar:"overview",previous:{title:"Custom Validator",permalink:"/extends/custom-validator"},next:{title:"Custom Dependency Resolver",permalink:"/extends/custom-dependency-resolver"}},l=[{value:"Callback Signature",id:"callback-signature",children:[]},{value:"Example",id:"example",children:[]},{value:"Separate Decorator and Its Implementation",id:"separate-decorator-and-its-implementation",children:[]}],s={rightToc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Custom authorization can be created using ",Object(i.b)("inlineCode",{parentName:"p"},"@authorize.custom")," decorator. Wrap it using function to create a new decorator like below"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"export function myCustomAuthorization(){\n    return authorize.custom(async info => {\n        //return true to authorize user otherwise false\n    })\n}\n")),Object(i.b)("p",null,"Apply your new created authorization decorator like below"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"export class AnimalController {\n    @myCustomAuthorization()\n    index(){\n\n    }\n}\n")),Object(i.b)("h2",{id:"callback-signature"},"Callback Signature"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"@authorize.custom")," receive two parameters a callback which will evaluate user authorization and ",Object(i.b)("inlineCode",{parentName:"p"},"tag")," metadata that will be used for further metadata processing. The callback signature is like below"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'(info: AuthorizationContext, location: "Class" | "Parameter" | "Method") => boolean | Promise<boolean>\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"info")," Metadata information about current authorization."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"location")," location of decorator applied ",Object(i.b)("inlineCode",{parentName:"li"},"Class")," ",Object(i.b)("inlineCode",{parentName:"li"},"Parameter")," ",Object(i.b)("inlineCode",{parentName:"li"},"Method"))),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"AuthorizationContext")," members is like below"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"interface AuthorizationContext {\n    value?: any\n    role: string[]\n    user: any\n    ctx: ActionContext\n}\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"role")," is roles of current login user, single or multiple role"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"user")," Current login user"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ctx")," Koa context of current request"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"value")," optional, value of current parameter (if authorization applied into parameter)")),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("p",null,"Example we will create custom authorization to authorize if the current user is an ",Object(i.b)("inlineCode",{parentName:"p"},"Admin")," or the owner of the data. As an example we have controller to modify user data like below"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-TypeScript"}),"@domain()\nexport class User {\n    constructor(\n        id:number,\n        email:string,\n        displayName:string,\n        address:string,\n        birthDate:Date\n    ){}\n}\n")),Object(i.b)("p",null,"Controller to modify above domain is like below"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'export class UsersController {\n    @route.put(":id")\n    async modify(id:number, user:User){\n        await db("User").update(id, user)\n    }\n}\n')),Object(i.b)("p",null,"Action ",Object(i.b)("inlineCode",{parentName:"p"},"modify")," above will only authorized to ",Object(i.b)("inlineCode",{parentName:"p"},"Admin")," or if the login user has the same ID with the requested data. "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'export function isAdminOrOwner() {\n    return authorize.custom((info, position) => {\n        const {role, user, ctx} = info\n        //the first parameter MUST be the ID of the requested user\n        const id = ctx.parameters[0]\n        return role.some(x => x === "Admin") || user.id === id\n    })\n}\n')),Object(i.b)("p",null,"Above snippet we created a new decorator ",Object(i.b)("inlineCode",{parentName:"p"},"@isAdminOrOwner()")," that can be applied to any method that the first parameter was the ID. Than we query if the current login user is an ",Object(i.b)("inlineCode",{parentName:"p"},"Admin")," or have the same ID with the requested data. To apply above decorator simply add it above the ",Object(i.b)("inlineCode",{parentName:"p"},"modify")," "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'export class UsersController {\n    @isAdminOrOwner()\n    @route.put(":id")\n    async modify(id:number, user:User){\n        await db("User").update(id, user)\n    }\n}\n')),Object(i.b)("h2",{id:"separate-decorator-and-its-implementation"},"Separate Decorator and Its Implementation"),Object(i.b)("p",null,"Putting authorization implementation inside decorator is simple and easy to read, but in some case it might cause circular dependency issue. You can use dependency resolver to solve this issue, by register the authorization classes by ID. "),Object(i.b)("p",null,"The first step, create a class implements ",Object(i.b)("inlineCode",{parentName:"p"},"Authorizer")," interface like below."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'import { Authorizer, AuthorizationContext, DefaultDependencyResolver } from "plumier"\n\n//create instance of DefaultDependencyResolver globally\nconst resolver = new DefaultDependencyResolver()\n\n//register the custom authorizer with the ID\n@resolver.register("isAdminOrOwner")\nexport class IsAdminOrOwnerAuthorizer implements Authorizer {\n    authorize({ role, user, ctx }:AuthorizationContext, location: "Class" | "Parameter" | "Method") {\n        const id = ctx.parameters[0]\n        return role.some(x => x === "Admin") || user.id === id\n    }\n}\n')),Object(i.b)("p",null,"Register the created resolver into the Plumier application "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'import { Plumier, WebApiFacility } from "plumier"\n\nconst app = new Plumier()\n    .set(new WebApiFacility({ dependencyResolver: resolver }))\n    //other facilities or middlewares\n    .initialize()\n')),Object(i.b)("p",null,"Then use the ID on each authorization applied. "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'export class UsersController {\n    //use the ID here, Plumier will use resolver \n    //to create instance of the custom authorizer \n    //then execute it\n    @authorize.custom("isAdminOrOwner")\n    @route.put(":id")\n    async modify(id:number, user:User){\n        \n    }\n}\n')),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"This functionality work well with dependency injection, register the custom authorizer by name/id and plumier will automatically pass the ID into the custom dependency resolver."))))}u.isMDXComponent=!0}}]);